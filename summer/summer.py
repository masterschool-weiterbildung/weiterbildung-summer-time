LESS_THAN_ONE_THOUSAND = 1000

"""
The constant maximum allowable before stopping the value generator
"""


def value_generator() -> int:
    """
    Generator function that continually prompts the user for input values,
    and yields each value until the cumulative sum exceeds
    LESS_THAN_ONE_THOUSAND.

    Yields:
        int: The value entered by the user.
    """
    final_sum = 0
    while final_sum < LESS_THAN_ONE_THOUSAND:
        final_sum += (value := int(input("Enter your number: ")))
        yield value


def calculate_the_sum() -> int:
    """
    Calculates the sum of values generated by `value_generator`.

    Returns:
        int: The total sum of the values entered by the user until the sum
             exceeds LESS_THAN_ONE_THOUSAND.

    Alternative Solution:
        def calculate_the_sum():
            is_sum_more_one_thousand = False
            final_sum = 0
            while not is_sum_more_one_thousand:
                final_sum+= user_input()
                if is_sum_more_than_thousand(final_sum):
                    is_sum_more_one_thousand = True
            print(f"Final sum: {final_sum}")

    """
    return sum([val for val in value_generator()])


def main() -> None:
    """
    Main function that calculates and prints the final sum of
    user-entered values.
    """
    print(f"Final sum: {calculate_the_sum()}")


if __name__ == "__main__":

    main()
